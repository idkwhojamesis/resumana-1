// @ts-nocheck
/* eslint-disable */
/* tslint:disable */
/* prettier-ignore-start */
/** @jsxRuntime classic */
/** @jsx createPlasmicElementProxy */
/** @jsxFrag React.Fragment */
// This class is auto-generated by Plasmic; please do not edit!
// Plasmic Project: nq12TutH13we1UigJmjqSV
// Component: ftq3RaS44j
import * as React from "react";
import * as p from "@plasmicapp/react-web";
import {
  classNames,
  createPlasmicElementProxy,
  deriveRenderOpts,
  ensureGlobalVariants
} from "@plasmicapp/react-web";
import ResumeTag from "../../ResumeTag"; // plasmic-import: zTvZ3EPO88/component
import ResumeTagAddNew from "../../ResumeTagAddNew"; // plasmic-import: K1x6xlyBVK/component
import { useScreenVariants as useScreenVariantslEfJD4ADnVx } from "./PlasmicGlobalVariant__Screen"; // plasmic-import: LEf-jD4aDnVX_/globalVariant
import "@plasmicapp/react-web/lib/plasmic.css";
import projectcss from "./plasmic_tag_resume.module.css"; // plasmic-import: nq12TutH13we1UigJmjqSV/projectcss
import sty from "./PlasmicTagStack.module.css"; // plasmic-import: ftq3RaS44j/css

export const PlasmicTagStack__VariantProps = new Array();

export const PlasmicTagStack__ArgProps = new Array("children");

function PlasmicTagStack__RenderFunc(props) {
  const { variants, args, overrides, forNode } = props;
  const $props = props.args;
  const globalVariants = ensureGlobalVariants({
    screen: useScreenVariantslEfJD4ADnVx()
  });

  return (
    <div
      data-plasmic-name={"root"}
      data-plasmic-override={overrides.root}
      data-plasmic-root={true}
      data-plasmic-for-node={forNode}
      className={classNames(
        projectcss.all,
        projectcss.root_reset,
        projectcss.plasmic_default_styles,
        projectcss.plasmic_mixins,
        projectcss.plasmic_tokens,
        sty.root
      )}
    >
      {true ? (
        <div
          data-plasmic-name={"tagsStack"}
          data-plasmic-override={overrides.tagsStack}
          className={classNames(projectcss.all, sty.tagsStack)}
        >
          <div
            data-plasmic-name={"tagContainer"}
            data-plasmic-override={overrides.tagContainer}
            className={classNames(projectcss.all, sty.tagContainer)}
          >
            <ResumeTag
              className={classNames("__wab_instance", sty.resumeTag__u7Ajb)}
            />
          </div>

          <div
            data-plasmic-name={"tagContainer2"}
            data-plasmic-override={overrides.tagContainer2}
            className={classNames(projectcss.all, sty.tagContainer2)}
          >
            <ResumeTag
              className={classNames("__wab_instance", sty.resumeTag___0YwoE)}
            />
          </div>

          <div
            data-plasmic-name={"tagContainer3"}
            data-plasmic-override={overrides.tagContainer3}
            className={classNames(projectcss.all, sty.tagContainer3)}
          >
            <ResumeTag
              className={classNames("__wab_instance", sty.resumeTag__dg32D)}
            />
          </div>

          <div
            data-plasmic-name={"tagContainer4"}
            data-plasmic-override={overrides.tagContainer4}
            className={classNames(projectcss.all, sty.tagContainer4)}
          >
            <ResumeTag
              className={classNames("__wab_instance", sty.resumeTag__shI4)}
            />
          </div>
        </div>
      ) : null}

      <div
        data-plasmic-name={"freeBox"}
        data-plasmic-override={overrides.freeBox}
        className={classNames(projectcss.all, sty.freeBox)}
      >
        {p.renderPlasmicSlot({
          defaultContents: (
            <React.Fragment>
              <ResumeTag
                className={classNames("__wab_instance", sty.resumeTag__lyOdZ)}
              />

              <ResumeTag
                className={classNames("__wab_instance", sty.resumeTag__gKiKr)}
              />

              <ResumeTag
                className={classNames("__wab_instance", sty.resumeTag__waPdL)}
              />

              <ResumeTag
                className={classNames("__wab_instance", sty.resumeTag__m7HLb)}
              />

              <ResumeTag
                className={classNames("__wab_instance", sty.resumeTag__zwSv6)}
              />

              <ResumeTag
                className={classNames("__wab_instance", sty.resumeTag__k03K)}
              />

              <ResumeTag
                className={classNames("__wab_instance", sty.resumeTag__jioyv)}
              />
            </React.Fragment>
          ),

          value: args.children
        })}

        <ResumeTagAddNew
          data-plasmic-name={"resumeTagAddNew"}
          data-plasmic-override={overrides.resumeTagAddNew}
          className={classNames("__wab_instance", sty.resumeTagAddNew)}
        />
      </div>
    </div>
  );
}

const PlasmicDescendants = {
  root: [
    "root",
    "tagsStack",
    "tagContainer",
    "tagContainer2",
    "tagContainer3",
    "tagContainer4",
    "freeBox",
    "resumeTagAddNew"
  ],

  tagsStack: [
    "tagsStack",
    "tagContainer",
    "tagContainer2",
    "tagContainer3",
    "tagContainer4"
  ],

  tagContainer: ["tagContainer"],
  tagContainer2: ["tagContainer2"],
  tagContainer3: ["tagContainer3"],
  tagContainer4: ["tagContainer4"],
  freeBox: ["freeBox", "resumeTagAddNew"],
  resumeTagAddNew: ["resumeTagAddNew"]
};

function makeNodeComponent(nodeName) {
  const func = function (props) {
    const { variants, args, overrides } = deriveRenderOpts(props, {
      name: nodeName,
      descendantNames: [...PlasmicDescendants[nodeName]],
      internalArgPropNames: PlasmicTagStack__ArgProps,
      internalVariantPropNames: PlasmicTagStack__VariantProps
    });

    return PlasmicTagStack__RenderFunc({
      variants,
      args,
      overrides,
      forNode: nodeName
    });
  };
  if (nodeName === "root") {
    func.displayName = "PlasmicTagStack";
  } else {
    func.displayName = `PlasmicTagStack.${nodeName}`;
  }
  return func;
}

export const PlasmicTagStack = Object.assign(
  // Top-level PlasmicTagStack renders the root element
  makeNodeComponent("root"),
  {
    // Helper components rendering sub-elements
    tagsStack: makeNodeComponent("tagsStack"),
    tagContainer: makeNodeComponent("tagContainer"),
    tagContainer2: makeNodeComponent("tagContainer2"),
    tagContainer3: makeNodeComponent("tagContainer3"),
    tagContainer4: makeNodeComponent("tagContainer4"),
    freeBox: makeNodeComponent("freeBox"),
    resumeTagAddNew: makeNodeComponent("resumeTagAddNew"),
    // Metadata about props expected for PlasmicTagStack
    internalVariantProps: PlasmicTagStack__VariantProps,
    internalArgProps: PlasmicTagStack__ArgProps
  }
);

export default PlasmicTagStack;
/* prettier-ignore-end */
